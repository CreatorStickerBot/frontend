# This is a basic workflow to help you get started with Actions

name: Push To Yandex Cloud CR

# Controls when the action will run. 
on:
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
#       - name: Yandex Cloud CR "Login" Action for GitHub Actions
#         uses: yc-actions/yc-cr-login@v0.1-alpha
#         with:
#           yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}


#       - name: Build, tag, and push image to Yandex Cloud Container Registry
#         env:
#           CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
#           CR_REPOSITORY: yc-cr-creator-sticker-frontend
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG \
#             --build-arg BACKEND_PORT=${{ secrets.BACKEND_PORT }} \
#             --build-arg VM_HOST=${{ secrets.VM_HOST }} \
#             --build-arg BUILD_NUM=$GITHUB_RUN_NUMBER \
#             .
#           docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
      - name: Deploy
        run: |
          mkdir -p ~/.ssh/
          echo "${SSH_PRIVATE_KEY}" > ../private.key
          sudo chmod 600 ../private.key
          echo "${SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
          
          ssh -i $SSH_KEY_PATH $VM_USER@$VM_HOST \
            sudo docker pull cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
            
          ssh -i $SSH_KEY_PATH $VM_USER@$VM_HOST \
            sudo docker ps -q --filter "name=Frontend" | grep -q . && sudo docker stop $(sudo docker ps -q --filter "name=Frontend") || true
            
          ssh -i $SSH_KEY_PATH $VM_USER@$VM_HOST \
            sudo docker run --name Frontend.$GITHUB_RUN_NUMBER -d -p 80:80 cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
            
          ssh -i $SSH_KEY_PATH $VM_USER@$VM_HOST \
            sudo docker system prune -a -f
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          VM_USER: ${{ secrets.VM_USER }}
          VM_HOST: ${{ secrets.VM_HOST }}
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          CR_REPOSITORY: yc-cr-creator-sticker-frontend
          IMAGE_TAG: ${{ github.sha }}
